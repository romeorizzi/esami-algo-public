# Subtask 1 [0 punti]: i casi di esempio forniti in attachment alla pagina del problema, essi includono i casi del testo  (internamente al CMS sono numerati da 0, ma esternamente da 1):
#ST: 0
#COPY: gen/inputs_hardcoded/input0.txt   
#COPY: gen/inputs_hardcoded/input1.txt
#COPY: gen/inputs_hardcoded/input2.txt
#COPY: gen/inputs_hardcoded/input3.txt
#COPY: gen/inputs_hardcoded/input4.txt
#COPY: gen/inputs_hardcoded/input5.txt
#COPY: gen/inputs_hardcoded/input6.txt
#COPY: gen/inputs_hardcoded/input7.txt
#COPY: gen/inputs_hardcoded/input8.txt
#COPY: gen/inputs_hardcoded/input9.txt
#COPY: gen/inputs_hardcoded/input10.txt
#COPY: gen/inputs_hardcoded/input11.txt

# generator parameters: 
# t, n, m, b, seed
# dove t indica il task type: t=1 rilevare i bridges, t=2 rilevare i cutnodes, t=3 rilevare il numero di componenti biconnesse cui appartiene ogni nodo.
# n è il numero di nodi
# m è il numero di archi
# b è il numero di bridges

# Subtask 2 [10 punti]: t=1, n ≤ 20, m ≤ 100. Da input13 a input18:
#ST: 10
# t,  n,   m,   b, seed
  1  10   20    1  7771
  1  10   30    1  7772
  1  15   30    2  7773
  1  20   30    3  7774
  1  20   40    2  7775
  1  20   50    1  7776

# Subtask 3 [10 punti]: t=1, n ≤ 1000, m ≤ 10000. Da input19 a input25:
#ST: 10
  1  100   200    10  27771
  1  100   300    10  27772
  1  150   300    20  27773
  1  200   300    30  27774
  1  200   400    20  27775
  1  200   500    31  27776
  1  500  1000    50  27776

# Subtask 4 [10 punti]: t=1, n ≤ 50000, m ≤ 200000. Da input19 a input25. Da input26 a input30:
#ST: 12
  1   1000    2000    117  37771
  1   5000   15000    101  37772
  1  15000   90000    203  37773
  1  30000  100000    307  37774
  1  50000  200000    209  37775


# Subtask 5 [10 punti]: t=2, n ≤ 20, m ≤ 100. Da input13 a input18:
#ST: 10
# t,  n,   m,   b, seed
  2  10   20    1  7771
  2  10   30    1  7772
  2  15   30    2  7773
  2  20   30    3  7774
  2  20   40    2  7775
  2  20   50    1  7776

# Subtask 5 [10 punti]: t=2, n ≤ 1000, m ≤ 10000. Da input19 a input25:
#ST: 10
  2  100   200    10  27771
  2  100   300    10  27772
  2  150   300    20  27773
  2  200   300    30  27774
  2  200   400    20  27775
  2  200   500    31  27776
  2  500  1000    50  27776

# Subtask 7 [10 punti]: t=2, n ≤ 50000, m ≤ 200000. Da input19 a input25. Da input26 a input30:
#ST: 13
  2   1000    2000    117  37771
  2   5000   15000    101  37772
  2  15000   90000    203  37773
  2  30000  100000    307  37774
  2  50000  200000    209  37775


# Subtask 8 [10 punti]: t=3, n ≤ 20, m ≤ 100. Da input13 a input18:
#ST: 10
# t,  n,   m,   b, seed
  3  10   20    1  7771
  3  10   30    1  7772
  3  15   30    2  7773
  3  20   30    3  7774
  3  20   40    2  7775
  3  20   50    1  7776

# Subtask 9 [10 punti]: t=3, n ≤ 1000, m ≤ 10000. Da input19 a input25:
#ST: 10
  3  100   200    10  27771
  3  100   300    10  27772
  3  150   300    20  27773
  3  200   300    30  27774
  3  200   400    20  27775
  3  200   500    31  27776
  3  500  1000    50  27776

# Subtask 10 [10 punti]: t=3, n ≤ 50000, m ≤ 200000. Da input19 a input25. Da input26 a input30:
#ST: 15
  3   1000    2000    117  37771
  3   5000   15000    101  37772
  3  15000   90000    203  37773
  3  30000  100000    307  37774
  3  50000  200000    209  37775

