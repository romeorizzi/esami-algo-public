# Subtask 1 [0 punti]: i casi di esempio forniti in attachment alla pagina del problema, essi includono i casi del testo  (internamente al CMS verranno rinumerati da 0, ma non esternamente):
#ST: 0
#COPY: gen/inputs_hardcoded/input0.txt   
#COPY: gen/inputs_hardcoded/input1.txt
#COPY: gen/inputs_hardcoded/input2.txt
#COPY: gen/inputs_hardcoded/input3.txt
#COPY: gen/inputs_hardcoded/input4.txt
#COPY: gen/inputs_hardcoded/input5.txt
#COPY: gen/inputs_hardcoded/input6.txt
#COPY: gen/inputs_hardcoded/input7.txt
#COPY: gen/inputs_hardcoded/input8.txt
#COPY: gen/inputs_hardcoded/input9.txt
#COPY: gen/inputs_hardcoded/input10.txt
#COPY: gen/inputs_hardcoded/input11.txt
#COPY: gen/inputs_hardcoded/input12.txt
#COPY: gen/inputs_hardcoded/input13.txt

# generator parameters: 
# t, N, nEff, nB, seed
# dove t indica il task type: t=0 devi solo dire il numero di mosse, t=1 devi listarle.
# N è il numero totale di dischi, nEff è il più grande disco con d[n] != 'B', ed un intervallo di nB dischi partendo da questo sono delle B. 
# NOTA:
#   se nEff=nB allora la struttura è B^{nB}A^{N-nB}
#   se nEff=nB=N allora la struttura è B^N
# in pratica il generatore stampa la seguente configurazione finale:
#    print(''.join([random.choice('ABC') for _ in range(nEff-nB)]) + 'B' * nB + 'A' * (N-nEff) )

# Subtask 2 [20 punti]: t=1 (listare le mosse), N ≤ 7, la configurazione finale è B^n. Da input15 a input17:
#ST: 10
# t, N, nEff, nB, seed
  1  5    5    5  777
  1  6    6    6  777
  1  7    7    7  777

# Subtask 3 [20 punti]: t=1 (listare le mosse), N ≤ 10, la configurazione finale è B^n. Da input18 a input20:
#ST: 10
1  8  8  8  777
1  9  9  9  777
1 10 10 10  777

# Subtask 4 [20 punti]: t=1 (listare le mosse), N ≤ 10000, numero mosse ≤ 100000. Da input21 a input23:
#ST: 20
1  1000 11  0  111
1  5000 10  0  112
1 10000  9  0  113

# Subtask 5 [10 punti]: t=0 (contare le mosse), N ≤ 10, la configurazione finale è B^n. Da input24 a input26:
#ST: 10
0  8  8  8  111
0  9  9  9  112
0 10 10 10 113

# Subtask 6 [10 punti]: t=1 (contare le mosse), N ≤ 10. Da input27 a input29:
#ST: 10
0  8  8  0  111
0  9  9  0  112
0 10 10  0  113

# Subtask 7 [10 punti]: t=0 (contare le mosse), N ≤ 10000, numero mosse ≤ 1000000. Da input30 a input32:
#ST: 20
0  1000 15  0  111
0  5000 14  0  112
0 10000 13  0  113

# Subtask 8 [10 punti]: t=0 (contare le mosse), N ≤ 10000, numero mosse ≤ 1000000000. Da input32 a input35:
#ST: 20
0  1000 16  0  111
0  5000 17  0  112
0 10000 18  0  113

