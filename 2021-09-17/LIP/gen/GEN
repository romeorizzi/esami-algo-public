# Subtask 1 [0 punti]: i casi di esempio forniti in attachment alla pagina del problema, essi includono i casi del testo  (internamente al CMS sono numerati da 0, ma esternamente da 1):
#ST: 0
#COPY: gen/hardcoded/input0.txt   
#COPY: gen/hardcoded/input1.txt
#COPY: gen/hardcoded/input2.txt
#COPY: gen/hardcoded/input3.txt
#COPY: gen/hardcoded/input4.txt
#COPY: gen/hardcoded/input5.txt
#COPY: gen/hardcoded/input6.txt
#COPY: gen/hardcoded/input7.txt
#COPY: gen/hardcoded/input8.txt
#COPY: gen/hardcoded/input9.txt
#COPY: gen/hardcoded/input10.txt

# generator parameters: 
# t, n, d, all_diff_vals, seed
# dove:
# * t: basic graph type in [1,3]: 1 clique, 2 path, 3 cycle
# * n: number of nodes of each basic type graph isomorphic copy
# * d: dimensionality of the Cartesian product. That is, number of isomorphic copies of the basic graph to be combined by Cartesian product.

# Subtask 2 [4 punti]: grafo completo, valori tutti diversi
#ST: 4
# t    n    d  diff_vals  seed
  1    7    1          1  7772
  1   10    1          1  7773
  1   24    1          1  7774
  1  124    1          1  7775
  1  301    1          1  7776

# Subtask 3 [6 punti]: grafo completo
#ST: 6
# t    n    d  diff_vals  seed
  1    3    1          0  7771
  1    7    1          0  7772
  1   10    1          0  7773
  1   24    1          0  7774
  1  124    1          0  7775
  1  301    1          0  7776

# Subtask 4 [15 punti]: il grafo è un cammino
#ST: 15
# t     n    d  diff_vals  seed
  2     7    1          0  7772
  2    10    1          0  7773
  2    24    1          0  7774
  2   124    1          0  7775
  2   301    1          0  7776
  2  1224    1          0  7775
  2  4224    1          0  7475
  2  7397    1          0  7675
  2 10000    1          0  9776

# Subtask 5 [10 punti]: il grafo è un ciclo
#ST: 10
# t     n    d  diff_vals  seed
  3     7    1          0  7772
  3    10    1          0  7773
  3    24    1          0  7774
  3   124    1          0  7775
  3   301    1          0  7776
  3  1224    1          0  7775
  3  4224    1          0  7785
  3  7397    1          0  7875
  3 10000    1          0  7976

# Subtask 6 [15 punti]: n ≤ 100, m ≤ 1000:
#ST: 15
# t     n    d  diff_vals  seed
  2     2    4          0  7772
  2     2    5          0  7773
  2     2    6          0  7774
  2     2    7          0  7775
  2     2    8          0  7776
  2     2    9          0  7777
  2     9    2          0  7777
  2    10    2          0  7777

# Subtask 6 [15 punti]: n ≤ 10.000, m ≤ 100.000:
#ST: 15
# t     n    d  diff_vals  seed
  2     2   10          0  7772
  2     2   11          0  7773
  2     2   12          0  7774
  2    20    2          0  7777
  2    30    2          0  7777

# Subtask 6 [35 punti]: n ≤ 50.000, m ≤ 200.000:
#ST: 35
# t     n    d  diff_vals  seed
  2     2   13          0  7772
  2     2   14          0  7773
  2    33    2          0  7776
  2   100    2          0  7777
  2   200    2          0  7778

