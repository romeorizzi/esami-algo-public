# generator parameters: 
# g, n, k

# Subtask 1 [0 punti]: i casi di esempio forniti in attachment alla pagina del problema, essi includono i casi del testo  (internamente al CMS sono numerati da 0, ma esternamente da 1):
#ST: 0
#COPY: gen/hardcoded/input0.txt   
#COPY: gen/hardcoded/input1.txt
#COPY: gen/hardcoded/input2.txt
#COPY: gen/hardcoded/input3.txt
#COPY: gen/hardcoded/input4.txt
#COPY: gen/hardcoded/input5.txt
#COPY: gen/hardcoded/input6.txt   
#COPY: gen/hardcoded/input7.txt
#COPY: gen/hardcoded/input8.txt

# Subtask 2 [7 punti]: g=1 (contare le s,t-stringhe), k=1, n ≤ 16. Da input9 a input14:
#ST: 7
# g    n k 
  1   11 1 
  1   12 1
  1   13 1 
  1   14 1 
  1   15 1 
  1   16 1 

# Subtask 3 [7 punti]: g=1 (contare le s,t-stringhe), n ≤ 16. Da input15 a input21:
#ST: 7
# g    n  k  
  1   11  2  
  1   12  3  
  1   13  2  
  1   14  3  
  1   15  3  
  1   16  2  
  1   16  4  

# Subtask 4 [5 punti]: g=1 (contare le s,t-stringhe), k=1, n ≤ 100. Da input22 a input27:
#ST: 5
# g    n  k  
  1   21  1  
  1   32  1  
  1   43  1  
  1   54  1  
  1   75  1  
  1   96  1  

# Subtask 5 [5 punti]: g=1 (contare le s,t-stringhe), n ≤ 100. Da input28 a input34:
#ST: 5
# g    n  k  
  1   21  2  
  1   32  3  
  1   43  2  
  1   54  3  
  1   75  3  
  1   96  2  
  1   96  4  

# Subtask 6 [3 punti]: g=1 (contare le s,t-stringhe), k=1, n ≤ 1000. Da input35 a input40:
#ST: 3
# g     n  k  
  1   100  1  
  1   150  1  
  1   200  1  
  1   400  1  
  1   750  1  
  1   912  1  

# Subtask 7 [3 punti]: g=1 (contare le s,t-stringhe), n ≤ 1000. Da input41 a input47:
#ST: 3
# g    n     k
  1  100     9
  1  150    13
  1  200    22
  1  300    23
  1  500    13
  1  741   122
  1  950     4

# Subtask 8 [7 punti]: g=2 (unranking), k=1, n ≤ 16. Da input48 a input53:
#ST: 7
# g    n  k  
  2   11  1  
  2   12  1  
  2   13  1  
  2   14  1  
  2   15  1  
  2   16  1  

# Subtask 9 [7 punti]: g=2 (unranking), n ≤ 16. Da input54 a input60:
#ST: 7
# g    n  k  
  2   11  2  
  2   12  3  
  2   13  2  
  2   14  3  
  2   15  3  
  2   16  2  
  2   16  4  

# Subtask 10 [5 punti]: g=2 (unranking), k=1, n ≤ 23. Da input61 a input66:
#ST: 5
# g    n  k  
  2   17  1  
  2   18  1  
  2   19  1  
  2   20  1  
  2   21  1  
  2   22  1  

# Subtask 11 [5 punti]: g=2 (unranking), n ≤ 25. Da input67 a input73:
#ST: 5
# g    n  k  
  2   18  2  
  2   19  3  
  2   20  2  
  2   21  3  
  2   22  3  
  2   23  2  
  2   24  4  

# Subtask 12 [5 punti]: g=3 (ranking), k=1, n ≤ 16. Da input74 a input79:
#ST: 5
# g    n  k  
  3   11  1  
  3   12  1  
  3   13  1  
  3   14  1  
  3   15  1  
  3   16  1  

# Subtask 13 [5 punti]: g=3 (ranking), n ≤ 16. Da input80 a input86:
#ST: 5
# g    n  k  
  3   11  2  
  3   12  3  
  3   13  2  
  3   14  3  
  3   15  3  
  3   16  2  
  3   16  4  

# Subtask 14 [5 punti]: g=3 (ranking), k=1, n ≤ 100. Da input87 a input92:
#ST: 5
# g    n  k  
  3   21  1  
  3   32  1  
  3   43  1  
  3   54  1  
  3   75  1  
  3   96  1  

# Subtask 15 [5 punti]: g=3 (ranking), n ≤ 100. Da input93 a input99:
#ST: 5
# g    n  k  
  3   21  2  
  3   32  3  
  3   43  2  
  3   54  3  
  3   75  3  
  3   96  2  
  3   96  4  

# Subtask 16 [3 punti]: g=3 (ranking), k=1, n ≤ 1000. Da input100 a input105:
#ST: 3
# g     n  k  
  3    50  1  
  3   100  1  
  3   200  1  
  3   500  1  
  3   750  1  
  3   912  1  

# Subtask 17 [3 punti]: g=3 (ranking), n ≤ 1000. Da input106 a input112:
#ST: 3
# g    n     k   
  3  100     9
  3  150    13
  3  200    22
  3  300    23
  3  500    13
  3  745   122
  3  950     4

# Subtask 18 [10 punti]: g=4 (listing), k=1, n ≤ 16. Da input113 a input116:
#ST: 10
# g    n  k  
  4   11  1  
  4   12  1  
  4   13  1  
  4   14  1  

# Subtask 19 [10 punti]: g=4 (listing), n ≤ 16. Da input117 a input123:
#ST: 10
# g    n  k  
  4   11  2  
  4   12  3  
  4   13  2  
  4   14  3  
  4   14  6  
  4   15  3  
  4   15  4  
